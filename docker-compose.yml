services:
  db:
    image: postgres:15
    container_name: postgres
    restart: unless-stopped
    env_file:
      - .env
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./postgres_backups:/backups
    networks:
      - app-network
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "$POSTGRES_USER"]
      interval: 5s
      timeout: 5s
      retries: 5

  backend:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: fastapi
    restart: unless-stopped
    volumes:
      - uploads_volume:/app/backend/app/uploads
      - ./static:/app/static
      - ./logs:/app/logs
    env_file:
      - .env
    depends_on:
      db:
        condition: service_healthy
    networks:
      - app-network
    command: >
      bash -c "alembic -c /app/alembic.ini upgrade head &&
      uvicorn backend.app.main:app --host 0.0.0.0 --port 8000"

  nginx:
    image: nginx:alpine
    container_name: nginx
    restart: unless-stopped
    ports:
      - "80:80"
    volumes:
      - uploads_volume:/var/uploads:ro
      - ./static:/app/static:ro
      - ./nginx/conf.d:/etc/nginx/conf.d
    depends_on:
      - backend
    networks:
      - app-network

volumes:
  uploads_volume:
  postgres_data:

networks:
  app-network:
    driver: bridge
